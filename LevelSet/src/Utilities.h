//-----------------------------------------------------------------------------------------------------------------------------
#ifndef UTILITIES_H_
#define UTILITIES_H_
//-----------------------------------------------------------------------------------------------------------------------------
#include "Error.h"
#include <stdexcept>
//-----------------------------------------------------------------------------------------------------------------------------
namespace kmd {

        //*********************************************************************************************************************
        class Utilities {
        //*********************************************************************************************************************
        public:
                //=============================================================================================================
                template<typename T>
                inline static T square(T x) {
                //=============================================================================================================
                        return x * x;
                }

                //=============================================================================================================
                template<typename T>
                static T check_argument(T t) {
                //=============================================================================================================
                        if ( t == 0 )
                                throw std::runtime_error(Error::message("invalid argument", __LINE__, __FILE__));
                        else
                                return t;
                }
        };


}
#endif /*UTILITIES_H_*/
